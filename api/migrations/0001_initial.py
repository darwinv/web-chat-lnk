# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-06-08 15:41
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecialistMessageList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('photo', models.CharField(blank=True, max_length=240)),
                ('nick', models.CharField(blank=True, max_length=40)),
                ('date', models.DateField(blank=True)),
                ('title', models.CharField(blank=True, max_length=240)),
                ('total', models.IntegerField(blank=True)),
                ('client', models.IntegerField(blank=True)),
                ('specialist', models.IntegerField(blank=True)),
            ],
            options={
                'managed': False,
                'db_table': 'specialist_message_list',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick', models.CharField(blank=True, max_length=45, null=True, verbose_name='nick')),
                ('email_exact', models.CharField(max_length=150, unique=True, verbose_name='email')),
                ('telephone', models.CharField(blank=True, max_length=14, null=True, verbose_name='phone')),
                ('cellphone', models.CharField(blank=True, max_length=14, null=True, verbose_name='cellphone')),
                ('photo', models.CharField(max_length=250, null=True, verbose_name='photo')),
                ('document_type', models.PositiveIntegerField(choices=[(1, 'DNI'), (2, 'Passport'), (3, 'Foreign Card')], verbose_name='type document')),
                ('document_number', models.CharField(max_length=45, verbose_name='document number')),
                ('img_document_number', models.CharField(max_length=250, null=True, verbose_name='upload document')),
                ('ruc', models.CharField(blank=True, max_length=40, null=True)),
                ('code', models.CharField(max_length=45, verbose_name='code')),
                ('anonymous', models.BooleanField(default=True, verbose_name='anonymous')),
                ('updated_at', models.DateTimeField(auto_now_add=True, verbose_name='updated at')),
                ('foreign_address', models.CharField(blank=True, max_length=200, null=True, verbose_name='foreign address')),
                ('key', models.CharField(blank=True, max_length=90, null=True)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Pending'), (2, 'Activate'), (3, 'Reject'), (4, 'Deactivated')], default=1)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Bank')),
                ('code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('image', models.CharField(max_length=169)),
                ('description', models.CharField(max_length=255)),
                ('fixed_commission', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('variable_commission', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ciiu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Clasification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_file', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('validity_months', models.PositiveIntegerField()),
                ('expiration_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, unique=True)),
                ('code_phone', models.CharField(max_length=4)),
                ('iso_code', models.CharField(max_length=4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='EconomicSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='FeeMonthSeller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_month', models.DateField()),
                ('fee_plans', models.PositiveIntegerField()),
                ('fee_contacts', models.PositiveIntegerField()),
                ('complete_fee_products', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LevelInstruction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='LogPaymentsCreditCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('successful', models.BooleanField()),
                ('description', models.CharField(max_length=50)),
                ('code_api', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='MatchAcquired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cause', models.TextField()),
                ('status', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Accepted'), (3, 'Declined')])),
                ('paid_by_client', models.BooleanField(default=True)),
                ('paid_by_specialist', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MatchAcquiredFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_url', models.CharField(max_length=100)),
                ('type_file', models.PositiveIntegerField(choices=[(2, 'Image'), (3, 'Voice'), (4, 'Document')])),
                ('match_acquired', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.MatchAcquired')),
            ],
        ),
        migrations.CreateModel(
            name='MatchAcquiredLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_on', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=50)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Accepted'), (3, 'Declined')])),
                ('declined', models.NullBooleanField()),
                ('declined_motive', models.CharField(max_length=255, null=True)),
                ('match_acquired', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.MatchAcquired')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('msg_type', models.CharField(blank=True, choices=[('q', 'query'), ('r', 'requery'), ('a', 'answer')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.PositiveIntegerField(choices=[(1, 'Text'), (2, 'Image'), (3, 'Video'), (4, 'Voice'), (5, 'Document')])),
                ('viewed', models.BooleanField(default=False)),
                ('file_url', models.CharField(blank=True, max_length=100)),
                ('code', models.CharField(max_length=45, verbose_name='code')),
                ('room', models.CharField(max_length=200)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.GroupMessage')),
                ('message_reference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ref', to='api.Message')),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fee_order_number', models.PositiveIntegerField()),
                ('fee_quantity', models.PositiveIntegerField()),
                ('reference_number', models.CharField(max_length=20)),
                ('pay_before', models.DateField()),
                ('status', models.PositiveIntegerField(choices=[(1, 'Pending'), (2, 'Paid')])),
            ],
        ),
        migrations.CreateModel(
            name='NotificationsBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255, verbose_name='message')),
                ('viewed', models.BooleanField(default=False, verbose_name='viewed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('code', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Objection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=45)),
                ('value', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('operation_number', models.CharField(max_length=12)),
                ('agency_code', models.CharField(max_length=10)),
                ('account_number_drawer', models.CharField(max_length=50)),
                ('check_number', models.CharField(max_length=50)),
                ('credit_cart_number', models.CharField(max_length=30)),
                ('credit_card_cvc', models.CharField(max_length=3)),
                ('credit_card_exp_date', models.DateField()),
                ('authorization_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Pending'), (2, 'Accepted'), (3, 'Declined')])),
                ('observations', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('description', models.CharField(max_length=200, null=True)),
                ('status', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=220)),
                ('code', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Department')),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('status', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Accepted'), (3, 'Answered'), (4, 'To score'), (5, 'Absolved')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('calification', models.PositiveSmallIntegerField(null=True)),
                ('changed_on', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QueryLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('description', models.CharField(max_length=200, null=True)),
                ('changed_on', models.DateTimeField()),
                ('status_log', models.PositiveIntegerField(choices=[(1, 'Requested'), (2, 'Accepted'), (3, 'Answered'), (4, 'To score'), (5, 'Absolved')])),
                ('derived', models.NullBooleanField()),
                ('declined', models.NullBooleanField()),
                ('declined_motive', models.TextField(null=True)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Query')),
            ],
        ),
        migrations.CreateModel(
            name='QueryPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('query_quantity', models.IntegerField()),
                ('validity_months', models.PositiveIntegerField()),
                ('maximum_response_time', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=4, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('clasification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Clasification')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductType')),
            ],
        ),
        migrations.CreateModel(
            name='QueryPlansAcquired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration_date', models.DateField(null=True)),
                ('validity_months', models.PositiveIntegerField()),
                ('available_queries', models.PositiveIntegerField()),
                ('query_quantity', models.PositiveIntegerField()),
                ('activation_date', models.DateField(null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_chosen', models.BooleanField(default=False)),
                ('available_requeries', models.PositiveIntegerField()),
                ('maximum_response_time', models.PositiveIntegerField()),
                ('acquired_at', models.DateTimeField(auto_now_add=True)),
                ('plan_name', models.CharField(max_length=50)),
                ('query_plans', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.QueryPlans')),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('permissions', models.ManyToManyField(db_table='role_permission', to='api.Permmission')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('place', models.CharField(max_length=100)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference_number', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('is_fee', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pin_code', models.CharField(max_length=50)),
                ('is_billable', models.BooleanField(default=True)),
                ('contract', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Contract')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductType')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Sale')),
            ],
        ),
        migrations.CreateModel(
            name='SellerContactNoEfective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=45, null=True)),
                ('last_name', models.CharField(max_length=55, null=True)),
                ('type_contact', models.CharField(choices=[('n', 'Natural'), ('b', 'Business')], max_length=1)),
                ('document_type', models.PositiveIntegerField(choices=[(1, 'DNI'), (2, 'Passport'), (3, 'Foreign Card')])),
                ('document_number', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=150, null=True)),
                ('civil_state', models.CharField(choices=[('c', 'cohabiting'), ('e', 'separated'), ('m', 'married'), ('w', 'widower'), ('d', 'divorced'), ('s', 'single')], max_length=1, null=True)),
                ('birthdate', models.DateField(null=True)),
                ('institute', models.CharField(blank=True, max_length=100, null=True)),
                ('activity_description', models.CharField(blank=True, max_length=255, null=True)),
                ('photo', models.CharField(max_length=250, null=True)),
                ('about', models.CharField(blank=True, max_length=255, null=True)),
                ('cellphone', models.CharField(blank=True, max_length=14, null=True)),
                ('telephone', models.CharField(blank=True, max_length=14, null=True)),
                ('ocupation', models.PositiveIntegerField(choices=[(1, 'Employer'), (2, 'Independent worker'), (3, 'Employee'), (4, 'Worker'), (5, 'Worker in a family business'), (6, 'Home worker'), (7, 'Other')], default=7, null=True)),
                ('profession', models.CharField(max_length=45, null=True)),
                ('business_name', models.CharField(max_length=45, null=True)),
                ('commercial_reason', models.CharField(max_length=45, null=True)),
                ('agent_firstname', models.CharField(max_length=45, null=True)),
                ('agent_lastname', models.CharField(max_length=45, null=True)),
                ('sex', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1)),
                ('latitude', models.CharField(blank=True, max_length=45)),
                ('longitude', models.CharField(blank=True, max_length=45)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('position', models.CharField(max_length=45, null=True)),
                ('ruc', models.CharField(blank=True, max_length=40, null=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Address')),
                ('ciiu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Ciiu')),
                ('economic_sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.EconomicSector')),
                ('level_instruction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.LevelInstruction')),
                ('nationality', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.Countries')),
                ('objection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Objection')),
            ],
        ),
        migrations.CreateModel(
            name='SellerNonBillablePlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('number_month', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('query_plans', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.QueryPlans')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('districts', models.ManyToManyField(db_table='zones_districts', to='api.District')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('type_client', models.CharField(choices=[('n', 'Natural'), ('b', 'Business')], max_length=1)),
                ('sex', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=1)),
                ('commercial_reason', models.CharField(max_length=45, null=True)),
                ('civil_state', models.CharField(choices=[('c', 'cohabiting'), ('e', 'separated'), ('m', 'married'), ('w', 'widower'), ('d', 'divorced'), ('s', 'single')], max_length=1, null=True)),
                ('birthdate', models.DateField(null=True)),
                ('activity_description', models.CharField(blank=True, max_length=255, null=True)),
                ('institute', models.CharField(blank=True, max_length=100, null=True)),
                ('ocupation', models.PositiveIntegerField(choices=[(1, 'Employer'), (2, 'Independent worker'), (3, 'Employee'), (4, 'Worker'), (5, 'Worker in a family business'), (6, 'Home worker'), (7, 'Other')], null=True)),
                ('about', models.CharField(blank=True, max_length=255, null=True)),
                ('business_name', models.CharField(max_length=45, null=True)),
                ('agent_firstname', models.CharField(max_length=45, null=True)),
                ('agent_lastname', models.CharField(max_length=45, null=True)),
                ('position', models.CharField(max_length=45, null=True)),
                ('profession', models.CharField(max_length=45, null=True)),
                ('ciiu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Ciiu')),
                ('economic_sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.EconomicSector')),
                ('level_instruction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.LevelInstruction')),
            ],
            options={
                'verbose_name_plural': 'Clients',
                'verbose_name': 'Client',
            },
            bases=('api.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('cv', models.CharField(blank=True, max_length=100, null=True)),
                ('ciiu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Ciiu')),
                ('zone', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Zone')),
            ],
            options={
                'verbose_name_plural': 'Sellers',
                'verbose_name': 'Seller',
            },
            bases=('api.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('business_name', models.CharField(max_length=55)),
                ('type_specialist', models.CharField(choices=[('m', 'Main'), ('a', 'Associate')], max_length=1)),
                ('star_rating', models.IntegerField(null=True)),
                ('cv', models.CharField(max_length=150, null=True)),
                ('payment_per_answer', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'Specialists',
                'verbose_name': 'Specialist',
            },
            bases=('api.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='recoverypassword',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='queryplansacquired',
            name='sale_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.SaleDetail'),
        ),
        migrations.AddField(
            model_name='query',
            name='acquired_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.QueryPlansAcquired'),
        ),
        migrations.AddField(
            model_name='query',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Category'),
        ),
        migrations.AddField(
            model_name='payment',
            name='authorized_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Bank'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.PaymentType'),
        ),
        migrations.AddField(
            model_name='notificationsback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='monthlyfee',
            name='payment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Payment'),
        ),
        migrations.AddField(
            model_name='monthlyfee',
            name='sale_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.SaleDetail'),
        ),
        migrations.AddField(
            model_name='message',
            name='query',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Query'),
        ),
        migrations.AddField(
            model_name='matchacquired',
            name='sale_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.SaleDetail'),
        ),
        migrations.AddField(
            model_name='match',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ProductType'),
        ),
        migrations.AddField(
            model_name='match',
            name='speciality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Category'),
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Province'),
        ),
        migrations.AddField(
            model_name='contract',
            name='type_contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ContractType'),
        ),
        migrations.AddField(
            model_name='category',
            name='contract',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Contract'),
        ),
        migrations.AddField(
            model_name='address',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Department'),
        ),
        migrations.AddField(
            model_name='address',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.District'),
        ),
        migrations.AddField(
            model_name='address',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Province'),
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Address', verbose_name='address'),
        ),
        migrations.AddField(
            model_name='user',
            name='code_cellphone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefix_cellphone', to='api.Countries'),
        ),
        migrations.AddField(
            model_name='user',
            name='code_telephone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='prefix_telephone', to='api.Countries'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='nationality',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.Countries', verbose_name='nationality'),
        ),
        migrations.AddField(
            model_name='user',
            name='residence_country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='residence', to='api.Countries', verbose_name='residence country'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='api.Role', verbose_name='role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='specialist',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Category'),
        ),
        migrations.AddField(
            model_name='sellernonbillableplans',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Seller'),
        ),
        migrations.AddField(
            model_name='sellercontactnoefective',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Seller'),
        ),
        migrations.AddField(
            model_name='sale',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Client'),
        ),
        migrations.AddField(
            model_name='sale',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Seller'),
        ),
        migrations.AddField(
            model_name='queryplansacquired',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Client'),
        ),
        migrations.AddField(
            model_name='queryplans',
            name='non_billable',
            field=models.ManyToManyField(through='api.SellerNonBillablePlans', to='api.Seller'),
        ),
        migrations.AddField(
            model_name='querylogs',
            name='from_specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='al_especialista', to='api.Specialist'),
        ),
        migrations.AddField(
            model_name='querylogs',
            name='to_specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='del_especialista', to='api.Specialist'),
        ),
        migrations.AddField(
            model_name='query',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Client'),
        ),
        migrations.AddField(
            model_name='query',
            name='specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Specialist'),
        ),
        migrations.AddField(
            model_name='message',
            name='specialist',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Specialist'),
        ),
        migrations.AddField(
            model_name='matchacquired',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Client'),
        ),
        migrations.AddField(
            model_name='matchacquired',
            name='specialist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Specialist'),
        ),
        migrations.AddField(
            model_name='feemonthseller',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Seller'),
        ),
        migrations.AddField(
            model_name='client',
            name='seller_asigned',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Seller'),
        ),
    ]
